[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Determinants of Financial Literacy at SUNY Geneseo",
    "section": "",
    "text": "Through surveying the SUNY Geneseo student body, we plan to explore what determines the level of financial literacy among students at SUNY Geneseo. The survey contains questions that address students’ demographics, academic background, family support through college, personal finance experience, and a financial literacy quiz. The sample size is 403 respondents, which is 10% of the population at SUNY Geneseo. We have noticed many students struggling on campus with the basics of personal finance and want to address the growing concern of how this could affect their success through college and in the future. We are interested in how the students’ family or academic background is associated with their financial literacy. Based on this exploration we plan to make some policy and curriculum suggestions on how we can improve the overall understanding of personal finance at SUNY Geneseo. Based on this research we plan to design a curriculum that will be offered to all students through the Geneseo Opportunities for Leadership Development (GOLD) program and will address the largest educational gaps that were identified in the survey. This course will be evaluated by administering the same financial literacy quiz following completion of the course and will offer insight into whether or not there is a substantial change in the students’ personal finance knowledge."
  },
  {
    "objectID": "project.html#survey-design",
    "href": "project.html#survey-design",
    "title": "Determinants of Financial Literacy at SUNY Geneseo",
    "section": "1.1 Survey Design",
    "text": "1.1 Survey Design\n\n1.1.1 Survey Questionaire\nThis survey is being commissioned by the SUNY Geneseo School of Business in partnership with the Geneseo Opportunities for Leadership Development (GOLD) program to gauge the financial literacy of the college’s student body. The college feels strongly that every SUNY Geneseo student regardless of background or area of academic interest should feel empowered with knowledge on how to manage their personal finances and make good financial decisions. This survey will help the School of Business in its development of financial literacy programming for the benefit all students.\n\nStudent Geneseo Email Address\n\nWhat year did you graduate high school?\n\nWhat NY county did you graduate high school from?\nChoose which option encapsulates the most of your high school education.\nYear at SUNY Geneseo?\n\nAre you a transfer student?\n\nUndergraduate Major(s)\n\nUndergraduate Minor(s)/ Concentration(s)\nPre-Professional Program(s)\nGraduate Degree\nWhat would you rate your personal finance knowledge?\n\nHow old were you when you got your first job?\n\nDid you file your own taxes in 2023?\n\nDid a parent or family member set up a college fund for you to help you afford your education?\n\nDo your parents/ guardians work, or have worked, in finance, banking, insurance, or real estate?\n\nDo you have a credit card under your name?\n\nIf you do have a credit card, how old were you when you first got your own credit card?\nDo you pay rent?\n\nDo you own a house?\nDo you make car payments?\n\nDo you currently have a brokerage, individual retirement account (IRA), or other savings account where you invest your money in stocks, bonds, CDs, options, crypto-currency, or other liquid market asset?\nDid you take any version of a personal finance course prior to attending college?For example, a class in high school or Junior Achievement. Have you ever taken a Finance course at SUNY Geneseo?\n\nQuizzes\n\n\nSuppose that by the beginning of year 2026 your income has doubled and prices of all goods have doubled too.\nIn 2026, how much will you be able to buy with your 2026 income?\n\nTrue or False: A 15 year mortgage typically requires higher monthly payments than a 30 year mortgage but the total interest over the life of the loan tends to be less.\n\nWhen you invest in an employer’s retirement savings plan such as a 401(k), your contributions are taxed:\n\nIn general, investments that are riskier tend to provide higher returns over time that investments with less risk.\n\nSuppose you have $100 in a savings account earning 2 percent interest compounded annually. After 5 years, how much would you have?\n\nWhich of the following statements about Annual Percentage Rate (APR) is correct?\n\nWhy is it important to save money?\n\nIf a self study personal finance course was offered as a GOLD certificate at SUNY Geneseo would you be interested?"
  },
  {
    "objectID": "project.html#preparation-of-data",
    "href": "project.html#preparation-of-data",
    "title": "Determinants of Financial Literacy at SUNY Geneseo",
    "section": "2.1 Preparation of Data",
    "text": "2.1 Preparation of Data\n\n\nCode\ndf &lt;- read_csv(\"C:/Users/Alexis Kruzicki/OneDrive/Documents/2023-24/DANL_399/survey-raw.csv\")\n\nvar_desc &lt;- colnames(df)\ncolnames(df) &lt;- c(\"time_stamp\",\n                  \"email\",\n                  \"score\",\n                  \"grad_yr\",\n                  \"county\",\n                  \"year_geneseo\",\n                  \"transfer\",\n                  \"major\",\n                  \"minor\",\n                  \"prof_program\",\n                  \"graduate_degree\",\n                  \"self_eval\",\n                  \"age_first_job\",\n                  \"file_tax\",\n                  \"college_fund\",\n                  \"parent_job\",\n                  \"credit_card\",\n                  \"age_credit_card\",\n                  \"pay_rent\",\n                  \"own_house\",\n                  \"car_payment\",\n                  \"brokerage_acct\",\n                  \"fnce_course_b4\",\n                  \"fnce_course_geneseo\",\n                  \"q1_inflation\",\n                  \"q2_mortgage_int\",\n                  \"q3_401k\",\n                  \"q4_risk_return\",\n                  \"q5_comp_int\",\n                  \"q6_apr\",\n                  \"q7_trap\",\n                  \"gold\")\n\n\nmajor_cat &lt;- read_csv('major_category.csv')\nminor_cat &lt;- read_csv('minor_category.csv')\n\nmajor_1_cat &lt;- major_cat |&gt; \n  select(ends_with('1')) |&gt; \n  distinct() |&gt; \n  rename(dept_major_1 = dept_1)\nmajor_2_cat &lt;- major_cat |&gt; \n  select(ends_with('2')) |&gt; \n  distinct() |&gt; \n  rename(dept_major_2 = dept_2)\n\nminor_1_cat &lt;- minor_cat |&gt; \n  select(ends_with('1')) |&gt; \n  distinct() |&gt; \n  rename(dept_minor_1 = dept_1)\nminor_2_cat &lt;- minor_cat |&gt; \n  select(ends_with('2')) |&gt; \n  distinct() |&gt; \n  rename(dept_minor_2 = dept_2)\n\n\ndf_clean &lt;- df |&gt; \n  filter(is.na(q7_trap) | q7_trap == \"To prepare for unexpected expenses\") |&gt; \n  mutate(score = as.integer(str_sub(score, 1, 1))) |&gt; \n  mutate(year_geneseo = case_when(str_detect(year_geneseo, \"First\") ~ \"First\",\n                                  str_detect(year_geneseo, \"Second\") ~ \"Second\",\n                                  str_detect(year_geneseo, \"Third\") ~ \"Third\",\n                                  str_detect(year_geneseo, \"Fourth\") ~ \"Fourth\",\n                                  str_detect(year_geneseo, \"Grad\") ~ \"Grad\",\n                                  str_detect(year_geneseo, \"Prefer\") ~ NA,\n                                  )) |&gt; \n  mutate(age_first_job_raw = age_first_job, .after = age_first_job) |&gt; \n  mutate(age_first_job = case_when(str_detect(age_first_job, \"15\") ~ \"15\",\n                                  str_detect(age_first_job, \"16\") ~ \"16\",\n                                  str_detect(age_first_job, \"17\") ~ \"17\",\n                                  str_detect(age_first_job, \"18\") ~ \"18\",\n                                  str_detect(age_first_job, \"19\") ~ \"19\",\n                                  str_detect(age_first_job, \"20\") ~ \"20\",\n                                  str_detect(age_first_job, \"Prefer\") ~ NA,\n                                  )\n         ) |&gt; \n  mutate(file_tax = case_when(str_detect(file_tax, \"Done\") ~ \"Yes\",\n                                  str_detect(file_tax, \"I did not\") ~ \"No\",\n                                  str_detect(file_tax, \"My parents\") ~ \"Parents\",\n                                  str_detect(file_tax, \"My accountant\") ~ \"Parents\",\n                                  str_detect(file_tax, \"My family\") ~ \"Parents\",\n                                  str_detect(file_tax, \"Yes\") ~ \"Yes\",\n                                  str_detect(file_tax, \"No\") ~ \"No\",\n                                  str_detect(file_tax, \"Prefer\") ~ NA,\n                                  )) |&gt; \n  select(-(time_stamp:email)) |&gt; \n  select(-q7_trap) |&gt; \n  mutate(id_respondent = row_number(), .before = 1) |&gt;\n  mutate(year_geneseo = ifelse(!is.na(graduate_degree), \n                               \"Grad\", year_geneseo) ) |&gt; \n  mutate(year_upper_lower = ifelse(year_geneseo == 'First' | \n                                     year_geneseo == 'Second',\n                                   'Underclassmen', \n                                   ifelse(year_geneseo == \"Grad\",\n                                          'Graduates', 'Upperclassmen')),\n         .after = year_geneseo\n         ) |&gt; \n  # Alexis\n  mutate(credit_card = case_when(str_detect(credit_card, \"I use my parent's credit card\") ~ \"Parents\",\n                                  str_detect(credit_card, \"Yes\") ~ \"Yes\",\n                                  str_detect(credit_card, \"No\") ~ \"No\",\n                                  str_detect(credit_card, \"Prefer\") ~ NA,\n                                  )) |&gt;\n  mutate(age_credit_card = case_when(str_detect(age_credit_card, \"Before age 18\") ~ \"b_18\",\n                                  str_detect(age_credit_card, \"At or after age 18\") ~ \"a_18\",\n                                  str_detect(age_credit_card, \" \nI never owned a credit card\") ~ \"Never\",\n                                  str_detect(age_credit_card, \"Prefer\") ~ NA\n                                  )) |&gt; \n  mutate(pay_rent = case_when(str_detect(pay_rent, \"Live on campus\") ~ \"On_Campus\",\n                                  str_detect(pay_rent, \"Yes\") ~ \"Yes\",\n                                  str_detect(pay_rent, \"No\") ~ \"No\",\n                                  str_detect(pay_rent, \"Prefer\") ~ NA,\n                                  ))|&gt;\n  mutate(own_house = case_when(str_detect(own_house, \"Yes\") ~ \"Yes\",\n                                  str_detect(own_house, \"No\") ~ \"No\",\n                                  str_detect(own_house, \"Prefer\") ~ NA,\n                                  ))|&gt;\n  mutate(car_payment = case_when(str_detect(car_payment, \"Yes\") ~ \"Yes\",\n                                  str_detect(car_payment, \"No\") ~ \"No\",\n                                  str_detect(car_payment, \"Prefer\") ~ NA,\n                                  )) |&gt; \n  mutate(score_pf = ifelse(score &gt;= 4, 1, 0), .after = score) |&gt; \n  relocate(self_eval, .after = score_pf) |&gt; \n  mutate(score_scaled = scale(score), .after = score_pf) |&gt; \n  mutate(self_eval_scaled = scale(self_eval), .after = self_eval) |&gt; \n  mutate(over_confidence = self_eval_scaled - score_scaled, .after = score_pf) |&gt; \n  mutate(MSA = case_when(  # https://dol.ny.gov/new-york-state-geography\n    str_detect(county, paste(c(\"Albany\", \"Rensselaer\", \"Saratoga\", \"Schenectady\", \"Schoharie\"), collapse = '|') ) ~ \"Albany-Schenectady-Troy\",\n    str_detect(county, paste(c(\"Broome\", \"Tioga\"), collapse = '|') ) ~ \"Binghamton\",\n    str_detect(county, paste(c(\"Erie\", \"Niagara\"), collapse = '|') ) ~ \"Buffalo-Niagara Falls\",\n    str_detect(county, paste(c(\"Chemung\"), collapse = '|') ) ~ \"Elmira\",\n    str_detect(county, paste(c(\"Warren\", \"Washington\"), collapse = '|') ) ~ \"Glens Falls\",\n    str_detect(county, paste(c(\"Tompkins\"), collapse = '|') ) ~ \"Ithaca\",\n    str_detect(county, paste(c(\"Kingston\"), collapse = '|') ) ~ \"Ulster\",\n    str_detect(county, paste(c(\"Bronx\", \"Kings\", \"New York\", \"Queens\", \"Richmond\"), collapse = '|') ) ~ \"New York City Metropolitan Area\",\n    str_detect(county, paste(c(\"Orange\", \"Rockland\", \"Westchester\"), collapse = '|') ) ~ \"Orange-Rockland-Westchester\",\n    str_detect(county, paste(c(\"Livingston\", \"Monroe\", \"Ontario\", \"Orleans\", \"Wayne\", \"Yates\"), collapse = '|') ) ~ \"Rochester\",\n    str_detect(county, paste(c(\"Madison\", \"Onondaga\", \"Oswego\"), collapse = '|') ) ~ \"Syracuse\",\n    str_detect(county, paste(c(\"Herkimer\", \"Oneida\"), collapse = '|') ) ~ \"Utica-Rome\",\n    str_detect(county, paste(c(\"Jefferson\"), collapse = '|') ) ~ \"Watertown-Fort Drum\",\n    str_detect(county, paste(c(\"Dutchess\", \"Putnam\"), collapse = '|') ) ~ \"Dutchess-Putnam\",\n    str_detect(county, paste(c(\"Nassau\", \"Suffolk\"), collapse = '|') ) ~ \"Nassau-Suffolk\",\n    str_detect(county, paste(c(\"high school\"), collapse = '|') ) ~ \"Outside NY\",\n    str_detect(county, paste(c(\"Allegany\", \"Cattaraugus\", \"Cayuga\", \"Chautauqua\",\n                               \"Chenango\", \"Clinton\", \"Columbia\", \"Cortland\",\n                               \"Delaware\", \"Essex\", \"Franklin\", \"Fulton\",\n                               \"Genesee\", \"Greene\", \"Hamilton\", \"Lewis\",\n                               \"Montgomery\", \"Otsego\", \"Saint Lawrence\", \"Schuyler\",\n                               \"Seneca\", \"Steuben\", \"Sullivan\", \"Wyoming\"), collapse = '|') ) ~ \"Non-MSA\",\n    ), .after = county\n    ) |&gt; \n  mutate(college_fund = case_when(\n    college_fund == \"No\" ~ \"No\",\n    college_fund == \"Parents Pay for college tuition\" ~ \"Yes\",\n    college_fund == \"Prefer to not respond\" ~ \"Prefer to not respond\",\n    college_fund == \"They set up a savings account with my own money\" ~ \"Yes\",\n    college_fund == \"Yes\" ~ \"Yes\",\n    college_fund == \"Yes, but got used for a car instead\" ~ \"Yes\",\n    college_fund == \"military/educational benefits\" ~ \"Yes\",\n    college_fund == \"not sure\" ~ \"Prefer to not respond\"\n  )) |&gt; \n  mutate(prof_program_TF = ifelse(is.na(prof_program),\n                                  0, 1), .after = prof_program) |&gt; \n  mutate(parent_job_TF = case_when(\n    parent_job == \"Accounting\" ~ 1,\n    parent_job == \"Insurance\" ~ 1,\n    parent_job == \"No\" ~ 0,\n    parent_job == \"One parent used to work for a bank for 17+ years\" ~ 1,\n    parent_job == \"Prefer to not respond\" ~ NA,\n    parent_job == \"Yes\" ~ 0,\n    parent_job == \"healthcare and Law\" ~ 0,\n    parent_job == \"mom is partly involved in real estate\" ~ 1,\n    parent_job == \"mom used to\" ~ 1,\n    parent_job == \"my dad is a mortgage broker\" ~ 1,\n  ), .after = parent_job) |&gt; \n  mutate(age_18_card = ifelse(age_credit_card == 'a_18',\n                              1, \n                              ifelse(age_credit_card == 'b_18',\n                                     0, NA)),\n         .after = age_credit_card) |&gt; \n  mutate(own_house = ifelse(own_house == \"No\", 0, 1)) |&gt; \n  mutate(car_payment = ifelse(car_payment == 'No',\n                              0, \n                              ifelse(car_payment == 'Yes',\n                                     1, NA)),\n         fnce_course_b4 = ifelse(fnce_course_b4 == 'No',\n                              0, \n                              ifelse(fnce_course_b4 == 'Yes',\n                                     1, NA)),\n         fnce_course_geneseo = ifelse(fnce_course_geneseo == 'No',\n                               \"0\", \n                               ifelse(fnce_course_geneseo == 'Yes, only one course',\n                                     \"1\", \n                                     ifelse(fnce_course_geneseo == 'Yes, more than one course', \"More_than_1\", NA))),\n         ) |&gt; \n  mutate(brokerage_acct = ifelse(brokerage_acct == \"I am using a financial advisor to invest my savings, unsure of the status of that\", \"No\", brokerage_acct),\n         brokerage_acct = ifelse(str_detect(brokerage_acct, \"I never set any of this up\"), \"No\", brokerage_acct),\n         brokerage_acct = ifelse(str_detect(brokerage_acct, \"Teacher's Retirement\"), \"No\", brokerage_acct),\n         brokerage_acct = ifelse(str_detect(brokerage_acct, \"No, however am currently in process of doing so\"), \"No\", brokerage_acct),\n         q_IRA = ifelse(str_detect(brokerage_acct, \"IRA\"), 1, 0),\n         q_stock = ifelse(str_detect(brokerage_acct, \"stock\"), 1, 0),\n         q_CDs = ifelse(str_detect(brokerage_acct, \"CDs\"), 1, 0),\n         q_brockerage = ifelse(str_detect(brokerage_acct, \"brockerage\"), 1, 0),\n         q_bonds = ifelse(str_detect(brokerage_acct, \"bonds\"), 1, 0),\n         q_options = ifelse(str_detect(brokerage_acct, \"options\"), 1, 0),\n         q_crypto = ifelse(str_detect(brokerage_acct, \"crypto\"), 1, 0),\n         q_yes = ifelse(brokerage_acct == \"No\", 0, \n                        ifelse(brokerage_acct == \"Prefer to not respond\", NA, 1)),\n         .before = brokerage_acct\n         ) |&gt; \n  separate(major, into = c('major_1', 'major_2'),\n           sep = ', ') |&gt; \n  separate(minor, into = c('minor_1', 'minor_2'),\n           sep = ', ') |&gt; \n  relocate(grad_yr, .before = year_geneseo) |&gt; \n  relocate(major_1, major_2, .after = year_upper_lower) |&gt; \n  relocate(minor_1, minor_2, .after = major_2) \n\ndf_clean &lt;- df_clean |&gt; \n  left_join(major_1_cat) |&gt;\n  left_join(major_2_cat) |&gt; \n  left_join(minor_1_cat) |&gt; \n  left_join(minor_2_cat |&gt; filter(!is.na(minor_2))) |&gt; \n  mutate(minor_2 = ifelse(minor_1 == \"anthropology and biology\",\n                          \"Biology\", minor_2),\n         minor_2 = ifelse(minor_1 == \"sustainability studies and biology\",\n                          \"Biology\", minor_2)\n         ) |&gt;\n  relocate(dept_major_1, .after = major_1) |&gt;\n  relocate(dept_major_2, .after = major_2) |&gt;\n  relocate(dept_minor_1, .after = minor_1) |&gt;\n  relocate(dept_minor_2, .after = minor_2) |&gt; \n  mutate(transfer = ifelse(transfer == \"Yes\", 1, 0)) |&gt; \n  select(-age_first_job_raw, -parent_job, -age_credit_card,\n         -brokerage_acct) |&gt; \n  mutate(q1_inflation = ifelse(q1_inflation == \"The same amount as today\", 1, 0),\n         q2_mortgage_int = ifelse(q2_mortgage_int == \"TRUE\", 1, 0),\n         q3_401k = ifelse(str_detect(q3_401k, \"Either before\"), 1, 0),\n         q4_risk_return = ifelse(q4_risk_return == \"TRUE\", 1, 0),\n         q5_comp_int = ifelse(q5_comp_int == \"More than $102\", 1, 0),\n         q6_apr = ifelse(str_detect(q6_apr, \"It is calculated by multiplying\"), 1, 0),\n         age_first_job = as.integer(age_first_job),\n         college_fund = ifelse(college_fund == \"Yes\", 1,\n                               ifelse(college_fund == \"No\", 0 , NA)),\n         age_18_card = ifelse(is.na(age_18_card), 0 , age_18_card)\n         ) |&gt; \n  mutate(major = \"\", .after = year_upper_lower) |&gt; \n  mutate(\n         major = ifelse(dept_major_1 == \"Education\" | dept_major_2 == \"Education\",\n                        \"Education\", major),\n\n         major = ifelse(dept_major_1 == \"School of Business\" | dept_major_2 == \"School of Business\", \"School of Business\", major)\n  ) |&gt; \n  filter(grad_yr != \"Received a GED\") |&gt; \n  mutate(major = ifelse( dept_major_1 %in% c(\"Biology\", \n                                             \"Mathematics\",\n                                             \"Geology\", \n                                             \"Chemistry\", \n                                             \"Neuroscience\", \n                                             \"Geography\",\n                                             \"Physics\",\n                                             \"Geography and Sustainability Studies\"), \n                         \"STEM\", major),\n         major = ifelse( dept_major_2 %in% c(\"Biology\", \n                                             \"Mathematics\",\n                                             \"Geology\", \n                                             \"Chemistry\", \n                                             \"Neuroscience\", \n                                             \"Geography\",\n                                             \"Physics\",\n                                             \"Geography and Sustainability Studies\"), \n                         \"STEM\", major))\n\ndf_clean &lt;- df_clean |&gt; \n  mutate(major = ifelse(is.na(major) & dept_major_1 == \"Education\", \"Education\", major),\n         major = ifelse(is.na(major) & dept_major_2 == \"Education\", \"Education\", major),)\n\n\ndf_clean &lt;- df_clean |&gt; \n  mutate(major = ifelse(is.na(major), \"Non-STEM\", major),\n         major = ifelse(major == \"\", \"Non-STEM\", major)\n         )\n\nmajor_1_count &lt;- df_clean |&gt; \n  count(dept_major_1) |&gt; \n  arrange(-n)\n\nmajor_2_count &lt;- df_clean |&gt; \n  count(dept_major_2) |&gt; \n  arrange(-n)\n\n\n\n\nCode\ndf_clean_sum &lt;- skim(df_clean) |&gt; \n  arrange(-n_missing)\n\n\n\n\nCode\ndf_clean |&gt; \n  mutate(grad_yr = factor(grad_yr, \n                           levels = c(\"Prior to 2018\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\"))) |&gt; \n  mutate(score_pf = ifelse(score_pf == 1, \"Pass\", \"Fail\")) |&gt; \n  filter(!is.na(grad_yr))|&gt; \n  ggplot(aes(fill = score_pf, y= grad_yr)) +\n  geom_bar(position = \"fill\") +\n  theme(legend.position = \"top\")+\n   scale_fill_manual(values = c(\"#9bbbae\", \"#065535\"))+\n  guides(fill = guide_legend(reverse = T)) +\n  labs(title = \"Graduation Year Pass Rate\", \n       x = \"Percentage Pass\", \n       y = \"High School\\n Graduation Year\",\n       fill = \"Financial Literacy Quiz\")\n\n\n\n\n\n\n\nCode\nDT::datatable(df_clean |&gt; \n                mutate(over_confidence = round(over_confidence, 2),\n                       score_scaled = round(over_confidence, 2),\n                       self_eval_scaled = round(self_eval_scaled, 2)))\n\n\n\n\n\n\n\n\n\nCode\ndf_clean |&gt; \n  mutate(score_pf = factor(score_pf)) |&gt; \n  filter(!is.na(year_upper_lower)) |&gt; \n  mutate(score_pf = ifelse(score_pf == 1, \"Pass\", \"Fail\")) |&gt;\n  ggplot(aes(fill =score_pf, x= year_upper_lower)) +\n  scale_fill_manual(values = c(\"#9bbbae\", \"#065535\"))+\n  geom_bar(position = \"fill\")+\n  scale_y_continuous(labels = scales::percent)+\n  guides(fill= guide_legend(reverse  = TRUE))+\n  theme(legend.position = \"top\", \n        plot.title = element_text(hjust = 0.5))+\n  labs(title = \"Overall Pass Rate\", \n       x = \"Percent Pass\", \n       y = \"\",\n       fill = \"Financial Literacy Quiz\")\n\n\n\n\n\n\n\nCode\ndf_clean |&gt; \n  mutate(score_pf = factor(score_pf)) |&gt; \n  filter(!is.na(year_upper_lower)) |&gt; \n  mutate(SoB = ifelse(dept_major_1 == \"School of Business\", \"SoB Student\", \"Not SoB Student\")) |&gt; \n  filter(!is.na(SoB)) |&gt; \n  mutate(score_pf = ifelse(score_pf == 1, \"Pass\", \"Fail\")) |&gt;\n  ggplot(aes(fill =score_pf, y= year_upper_lower)) +\n  scale_fill_manual(values = c(\"#9bbbae\", \"#065535\"))+\n  geom_bar(position = \"fill\") +\n  facet_wrap(SoB~.) +\n  scale_x_continuous(labels = scales::percent)+\n  guides(fill= guide_legend(reverse  = TRUE))+\n  theme(legend.position = \"top\", \n        plot.title = element_text(hjust = 0.5))+\n  labs(title = \"SoB Pass Rate\", \n       x = \"Percent Pass\", \n       y = \"\",\n       fill = \"Financial Literacy Quiz\")\n\n\n\n\n\n\n\nCode\ndf_clean |&gt; \n  mutate(score_pf = factor(score_pf)) |&gt; \n  filter(!is.na(year_upper_lower),\n         !is.na(credit_card)) |&gt; \n  ggplot(aes(fill =score_pf, y= year_upper_lower)) +\n  geom_bar(position = \"fill\") +\n  facet_wrap(credit_card~.) +\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\nCode\ndf_clean_ML &lt;- df_clean |&gt; \n  select(-id_respondent, \n         -score, -score_scaled, \n         -self_eval, -self_eval_scaled,\n         -county, -year_geneseo,\n         -major_1, -major_2, -minor_1, -minor_2,\n         -prof_program, -graduate_degree,\n  ) \n\n\n\n\nCode\nlibrary(maps)\nlibrary(ggplot2)\n\n# maps::map('county', region = 'new york', col = \"#5E610B\")\n# map.axes(cex.axis=0.8) \n# title(main = \"New York State by Counties\")\n\nny_county_score &lt;- df_clean |&gt; \n  group_by(county) |&gt; \n  summarize(score = mean(score),\n            n = n()) |&gt; \n  mutate(subregion = str_replace_all(county, \" County\", \"\")\n  ) |&gt; \n  mutate(subregion = ifelse(subregion == \"Kings (Brooklyn)\", \"Kings\", subregion),\n         subregion = ifelse(subregion == \"New York (Manhattan)\", \"New York\", subregion),\n         subregion = ifelse(subregion == \"Richmond (Staten Island)\", \"Richmond\", subregion),\n         subregion = ifelse(subregion == \"Saint Lawrence\", \"St Lawrence\", subregion),\n  ) |&gt; \n  mutate(subregion = str_to_lower(subregion)) |&gt; \n  filter(subregion != \"i did not graduate from a high school in ny\")\n\nstates &lt;- map_data(\"state\")\ncounties &lt;- map_data(\"county\")\nNewYork &lt;- subset(states, region == \"new york\")\n# head(NewYork)\n\nny_county &lt;- subset(counties, region == \"new york\")\n# head(ny_county)\n\n\nny_county_data &lt;- ny_county |&gt; \n  left_join(ny_county_score)\n\nggplot(ny_county_data) + \n  geom_polygon(aes(x=long, y = lat, group = group, fill = n),\n               linewidth = .1, color = 'grey90') +\n  labs(title = \"New York State by Counties\", x = \"longitude\", y = \"latitude\") +\n  coord_fixed(1.3) +\n  scale_fill_gradient(low = \"#9bbbae\",\n                      high = \"darkgreen\",\n                      na.value = \"white\") +\n  theme_map() +\n  theme(panel.background = element_blank())+\n  labs(title = \"Where Students Graduated High School\", \n       fill = \"Number of Students\")\n\n\n\n\n\n\n\nCode\ndf_clean |&gt; \n  mutate(grad_yr = factor(grad_yr, \n                           levels = c(\"Prior to 2018\", \"2018\", \"2019\", \"2020\", \"2021\", \"2022\", \"2023\"))) |&gt; \n  mutate(score_pf = ifelse(score_pf == 1, \"Pass\", \"Fail\")) |&gt; \n  filter(!is.na(grad_yr))|&gt; \n  ggplot(aes(fill = score_pf, y= grad_yr)) +\n  geom_bar(position = \"fill\") +\n  theme(legend.position = \"top\", \n        plot.title = element_text(hjust = 0.5))+\n  scale_fill_manual(values = c(\"#9bbbae\", \"#065535\"))+\n  guides(fill = guide_legend(reverse = T)) +\n  labs(title = \"Graduation Year Pass Rate\", \n       x = \"Percentage Pass\", \n       y = \"High School\\n Graduation Year\",\n       fill = \"Financial Literacy Quiz\")\n\n\n\n\n\n\n\nCode\ndf_clean |&gt; \n  mutate(score_pf = factor(score_pf)) |&gt; \n  filter(!is.na(age_first_job))|&gt; \n  ggplot(aes(fill =score_pf, y= age_first_job)) +\n  geom_bar(position = \"fill\") +\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\nCode\ndf_clean |&gt; \n  mutate(score_pf = factor(score_pf)) |&gt; \n  filter(!is.na(file_tax))|&gt; \n  ggplot(aes(fill =score_pf, y= file_tax)) +\n  geom_bar(position = \"fill\") +\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\nCode\ndf_clean |&gt; \n  mutate(score_pf = factor(score_pf)) |&gt; \n  filter(!is.na(credit_card))|&gt; \n  ggplot(aes(fill =score_pf, y= credit_card)) +\n  geom_bar(position = \"fill\") +\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\nCode\ndf_clean |&gt; \n  mutate(score = factor(score)) |&gt; \n  filter(!is.na(year_upper_lower)) |&gt; \n  ggplot(aes(fill =score, x= year_upper_lower)) +\n  geom_bar(position = \"fill\")\n\n\n\n\n\n\n\nCode\ndf_clean |&gt; \n  count(year_geneseo) |&gt; \n  mutate(prop = n / sum(n)) |&gt; \n  filter(!is.na(year_geneseo)) |&gt; \n  ggplot(aes(x = year_geneseo, y = prop,\n             fill = year_geneseo)) +\n  geom_col() +\n  scale_y_continuous(labels = scales::percent) +\n  guides(fill = \"none\") +\n  labs(x = \"Year at Geneseo\",\n       y = \"Proportion\",\n       title = \"Percent of Respondents and Their Year at Geneseo\")\n\n\n\n\n\n\n\nCode\ndf_clean |&gt; \n  mutate(score = factor(score)) |&gt; \n  ggplot(aes(x =score, fill= score)) +\n  geom_bar(show.legend = F)\n\n\n\n\n\n\n\nCode\ndf_clean |&gt; \n  mutate(score = factor(score)) |&gt; \n  filter(!is.na(year_geneseo)) |&gt; \n  ggplot(aes(fill =score, x= year_geneseo)) +\n  geom_bar(position = \"fill\")\n\n\n\n\n\n\n\nCode\ndf_clean |&gt;\n  filter(!is.na(major_1)) |&gt;\n  ggplot(aes(y= reorder(major_1, score), fill = reorder(major_1, score), x= score)) +\n  geom_boxplot(show.legend = F) +\n  labs(y = \"\",\n       x = \"Score\",\n       title = \"Financial Literacy Scores By Major\") +\n  scale_fill_manual(values = c(\"#9BBBAE\" ,\n  \"#97B8AB\" ,\n  \"#93B5A7\" ,\n  \"#8FB2A4\" ,\n  \"#8AB0A1\" ,\n  \"#86AD9D\" ,\n  \"#82AA9A\" ,\n  \"#7EA796\" ,\n  \"#7AA493\" ,\n  \"#76A290\" ,\n  \"#729F8C\" ,\n  \"#6D9C89\" ,\n  \"#699986\" ,\n  \"#659682\" ,\n  \"#61937F\" ,\n  \"#5D907C\" ,\n  \"#598E78\" ,\n  \"#558B75\" ,\n  \"#508872\" ,\n  \"#4C856E\" ,\n  \"#48826B\" ,\n  \"#448067\" ,\n  \"#407D64\" ,\n  \"#3C7A61\" ,\n  \"#38775D\" ,\n  \"#34745A\" ,\n  \"#2F7157\" ,\n  \"#2B6E53\" ,\n  \"#276C50\" ,\n  \"#23694D\" ,\n  \"#1F6649\" ,\n  \"#1B6346\" ,\n  \"#176042\" ,\n  \"#125E3F\" ,\n  \"#0E5B3C\" ,\n  \"#0A5838\" ,\n  \"#065535\" )\n) +\n  theme(plot.title = element_text(hjust = .5,\n                                  size = rel(2)))\n\n\n\n\n\n\n\nCode\ndf_clean |&gt;\n  filter(!is.na(fnce_course_geneseo)) |&gt;\n  mutate(fnce_course_geneseo = factor(fnce_course_geneseo,\n                                      levels = c('More_than_1','1','0'))) |&gt;\n  ggplot(aes(y=score, fill=fnce_course_geneseo))+\n  geom_bar(position = \"fill\")+\n  theme(legend.position = \"top\")+\nlabs(title = \"Finance Course Taken at Geneseo Compared to Score \",\n       x = \"Proportion\",\n       y = \"Score\",\n       fill = \"Finance Course Taken\") +\n  guides(fill = guide_legend(keywidth = 3,\n                             label.position = \"bottom\",\n                             reverse = T)) +\n  scale_fill_manual(values = rev(c('#9bbbae', '#699985','#065535')))\n\n\n\n\n\n\n\n\n# Empirical Analysis\n## Estimation\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_clean_ML &lt;- df_clean |&gt; \n  select(-id_respondent, \n         -score, -score_scaled, \n         -self_eval, -self_eval_scaled,\n         -county, -year_geneseo,\n         -major_1, -major_2, -minor_1, -minor_2,\n         -starts_with(\"dept_\"), \n         -q1_inflation, -q2_mortgage_int, -q3_401k,\n         -q4_risk_return, -q5_comp_int, -q6_apr,\n         -prof_program, -graduate_degree,\n         ) |&gt; \n  drop_na()\n\ndf_clean_ML2 &lt;- df_clean |&gt; \n  select(-id_respondent, \n         -score_pf, -score_scaled, \n         -self_eval, -self_eval_scaled,\n         -county, -year_geneseo,\n         -major_1, -major_2, -minor_1, -minor_2,\n         -starts_with(\"dept_\"), \n         -q1_inflation, -q2_mortgage_int, -q3_401k,\n         -q4_risk_return, -q5_comp_int, -q6_apr,\n         -prof_program, -graduate_degree,\n         ) |&gt; \n  drop_na()\n\ndf_clean_ML_sum &lt;- skim(df_clean_ML) |&gt; \n  arrange(-n_missing)\n\ndept_fnce &lt;- df_clean_ML |&gt; \n  group_by(fnce_course_geneseo, major) |&gt; \n  count() |&gt; \n  arrange(fnce_course_geneseo, n)\n\nreg &lt;- lm(data = df_clean_ML,\n          score_pf ~ .)\ndf_dummies &lt;-  as.data.frame(model.matrix(reg))[, -1]\ndf_dummies &lt;- cbind(df_clean_ML$score_pf ,df_dummies)\ndf_ML &lt;- df_dummies |&gt; \n  rename(score_pf = `df_clean_ML$score_pf`)\n\n\ndf_dummies_cor &lt;- cor(df_dummies) |&gt; \n  as.data.frame()\n\n\nreg &lt;- lm(data = df_clean_ML2,\n          score ~ .)\ndf_dummies &lt;-  as.data.frame(model.matrix(reg))[, -1]\ndf_dummies &lt;- cbind(df_clean_ML2$score ,df_dummies)\ndf_ML2 &lt;- df_dummies |&gt; \n  rename(score = `df_clean_ML2$score`)\n:::\n\n\nCode\ncolnames(df_ML) &lt;- str_replace_all(colnames(df_ML), \" \", \"_\")\ncolnames(df_ML) &lt;- str_replace_all(colnames(df_ML), \"-\", \"_\")\n\ncolnames(df_ML2) &lt;- str_replace_all(colnames(df_ML2), \" \", \"_\")\ncolnames(df_ML2) &lt;- str_replace_all(colnames(df_ML2), \"-\", \"_\")\n\nmodel &lt;- glm(score_pf ~ ., \n             data = df_ML, \n             family = binomial(link = \"logit\") )\n\n\nmodel_lm &lt;- lm(score ~ ., \n               data = df_ML2)\n\n# summary(model_lm)\n\n\n\n\nCode\nlibrary(margins)\nm &lt;- margins(model)\name_result &lt;- summary(m)\n# ame_result\n\n\n\n2.1.1 Regression Table\n\nCode\nstargazer(model, model_lm, type = 'html',\n          omit = c(\"MSA\", \"grad_\", \"pay_\",\n                   \"college_fund\"))\n\n\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\nscore_pf\n\n\nscore\n\n\n\n\n\n\nlogistic\n\n\nOLS\n\n\n\n\n\n\n(1)\n\n\n(2)\n\n\n\n\n\n\n\n\nover_confidence\n\n\n-2.023***\n\n\n-0.785***\n\n\n\n\n\n\n(0.265)\n\n\n(0.049)\n\n\n\n\n\n\n\n\n\n\n\n\nyear_upper_lowerUnderclassmen\n\n\n0.345\n\n\n0.077\n\n\n\n\n\n\n(0.862)\n\n\n(0.288)\n\n\n\n\n\n\n\n\n\n\n\n\nyear_upper_lowerUpperclassmen\n\n\n0.932\n\n\n0.091\n\n\n\n\n\n\n(0.852)\n\n\n(0.272)\n\n\n\n\n\n\n\n\n\n\n\n\nmajorNon_STEM\n\n\n-0.031\n\n\n0.156\n\n\n\n\n\n\n(0.535)\n\n\n(0.175)\n\n\n\n\n\n\n\n\n\n\n\n\nmajorSchool_of_Business\n\n\n1.380**\n\n\n0.815***\n\n\n\n\n\n\n(0.618)\n\n\n(0.212)\n\n\n\n\n\n\n\n\n\n\n\n\nmajorSTEM\n\n\n0.246\n\n\n0.397**\n\n\n\n\n\n\n(0.547)\n\n\n(0.183)\n\n\n\n\n\n\n\n\n\n\n\n\ntransfer\n\n\n-1.455**\n\n\n-0.369*\n\n\n\n\n\n\n(0.654)\n\n\n(0.202)\n\n\n\n\n\n\n\n\n\n\n\n\nprof_program_TF\n\n\n1.103*\n\n\n0.059\n\n\n\n\n\n\n(0.608)\n\n\n(0.198)\n\n\n\n\n\n\n\n\n\n\n\n\nage_first_job\n\n\n0.418**\n\n\n0.140**\n\n\n\n\n\n\n(0.193)\n\n\n(0.058)\n\n\n\n\n\n\n\n\n\n\n\n\nfile_taxParents\n\n\n0.179\n\n\n0.215\n\n\n\n\n\n\n(0.413)\n\n\n(0.137)\n\n\n\n\n\n\n\n\n\n\n\n\nfile_taxYes\n\n\n1.807***\n\n\n0.803***\n\n\n\n\n\n\n(0.613)\n\n\n(0.180)\n\n\n\n\n\n\n\n\n\n\n\n\nparent_job_TF\n\n\n-1.404\n\n\n0.135\n\n\n\n\n\n\n(1.469)\n\n\n(0.474)\n\n\n\n\n\n\n\n\n\n\n\n\ncredit_cardParents\n\n\n1.556\n\n\n0.152\n\n\n\n\n\n\n(0.991)\n\n\n(0.306)\n\n\n\n\n\n\n\n\n\n\n\n\ncredit_cardYes\n\n\n2.179***\n\n\n0.494**\n\n\n\n\n\n\n(0.744)\n\n\n(0.215)\n\n\n\n\n\n\n\n\n\n\n\n\nage_18_card\n\n\n-1.327*\n\n\n-0.246\n\n\n\n\n\n\n(0.740)\n\n\n(0.208)\n\n\n\n\n\n\n\n\n\n\n\n\nown_house\n\n\n-4.836***\n\n\n-1.408**\n\n\n\n\n\n\n(1.706)\n\n\n(0.550)\n\n\n\n\n\n\n\n\n\n\n\n\ncar_payment\n\n\n0.589\n\n\n0.328**\n\n\n\n\n\n\n(0.449)\n\n\n(0.146)\n\n\n\n\n\n\n\n\n\n\n\n\nq_IRA\n\n\n0.596\n\n\n0.081\n\n\n\n\n\n\n(0.635)\n\n\n(0.195)\n\n\n\n\n\n\n\n\n\n\n\n\nq_stock\n\n\n0.668\n\n\n0.103\n\n\n\n\n\n\n(0.692)\n\n\n(0.217)\n\n\n\n\n\n\n\n\n\n\n\n\nq_CDs\n\n\n1.206\n\n\n0.141\n\n\n\n\n\n\n(0.822)\n\n\n(0.250)\n\n\n\n\n\n\n\n\n\n\n\n\nq_brockerage\n\n\n0.804\n\n\n0.252\n\n\n\n\n\n\n(0.783)\n\n\n(0.235)\n\n\n\n\n\n\n\n\n\n\n\n\nq_bonds\n\n\n0.290\n\n\n0.022\n\n\n\n\n\n\n(0.764)\n\n\n(0.251)\n\n\n\n\n\n\n\n\n\n\n\n\nq_options\n\n\n1.962\n\n\n0.427\n\n\n\n\n\n\n(1.546)\n\n\n(0.387)\n\n\n\n\n\n\n\n\n\n\n\n\nq_crypto\n\n\n-1.763\n\n\n-0.604*\n\n\n\n\n\n\n(1.185)\n\n\n(0.314)\n\n\n\n\n\n\n\n\n\n\n\n\nq_yes\n\n\n0.013\n\n\n0.431**\n\n\n\n\n\n\n(0.668)\n\n\n(0.213)\n\n\n\n\n\n\n\n\n\n\n\n\nfnce_course_b4\n\n\n0.553\n\n\n0.183\n\n\n\n\n\n\n(0.396)\n\n\n(0.122)\n\n\n\n\n\n\n\n\n\n\n\n\nfnce_course_geneseo1\n\n\n0.764\n\n\n0.114\n\n\n\n\n\n\n(0.702)\n\n\n(0.220)\n\n\n\n\n\n\n\n\n\n\n\n\nfnce_course_geneseoMore_than_1\n\n\n1.867**\n\n\n0.639***\n\n\n\n\n\n\n(0.782)\n\n\n(0.221)\n\n\n\n\n\n\n\n\n\n\n\n\ngoldNo\n\n\n-1.080\n\n\n-0.453*\n\n\n\n\n\n\n(0.769)\n\n\n(0.239)\n\n\n\n\n\n\n\n\n\n\n\n\ngoldYes\n\n\n-0.190\n\n\n0.068\n\n\n\n\n\n\n(0.399)\n\n\n(0.128)\n\n\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n-7.610**\n\n\n0.721\n\n\n\n\n\n\n(3.583)\n\n\n(1.104)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n355\n\n\n355\n\n\n\n\nR2\n\n\n\n\n0.638\n\n\n\n\nAdjusted R2\n\n\n\n\n0.574\n\n\n\n\nLog Likelihood\n\n\n-129.024\n\n\n\n\n\n\nAkaike Inf. Crit.\n\n\n366.048\n\n\n\n\n\n\nResidual Std. Error\n\n\n\n\n0.981 (df = 301)\n\n\n\n\nF Statistic\n\n\n\n\n10.010*** (df = 53; 301)\n\n\n\n\n\n\n\n\nNote:\n\n\np&lt;0.1; p&lt;0.05; p&lt;0.01\n\n\n\n\n\n\n2.1.2 Logit AME\n\n\nCode\nggplot(data = ame_result |&gt; \n         filter( p &lt;= .1)) +\n  geom_point( aes(y = reorder(factor, AME), x = AME) ) +\n  geom_errorbar(aes(y = reorder(factor, AME), \n                    xmin = lower, xmax = upper),\n                width = .5) +\n  geom_vline(xintercept = 0, color = 'red', linetype = 2) +\n  labs(y = \"\",\n       title = \"Logistic Regression Estimation\",\n       subtitle = \"Average Marginal Effect on Financial Literacy Scores\") +\n  scale_x_continuous(breaks = seq(-1,.4,.2),\n                     labels = scales::percent) +\n  theme(plot.title = element_text(hjust = .5),\n        plot.subtitle = element_text(hjust = .5))\n\n\n\n\n\n\n\n2.1.3 Linear Regression AME\n\n\nCode\nbroom::tidy(model_lm, conf.int = T) |&gt; \n  filter(p.value &lt;= .1) |&gt; \n  filter(!str_detect(term, \"MSA\")) |&gt; \n  ggplot() +\n  geom_point( aes(y = reorder(term, estimate), x = estimate)) +\n  geom_errorbar(aes(y = reorder(term, estimate), \n                    xmin = conf.low, xmax = conf.high),\n                width = .5,) +\n  geom_vline(xintercept = 0, color = 'red', linetype = 2) +\n  labs(y = \"\",\n       x = \"Beta Estimate\",\n       title = \"Linear Regression Estimation\",\n       subtitle = \"Effect on Financial Literacy Scores\")  +\n  theme(plot.title = element_text(hjust = .5),\n        plot.subtitle = element_text(hjust = .5),\n        )\n\n\n\n\n\n\n\nCode\n# df_clean |&gt; \n  # count(credit_card)\n\n\n\n\nCode\ndf_ML |&gt; \n  mutate(q_yes = ifelse(q_yes==0, 'Invests', \"Doesn't Invest\")) |&gt; \n  ggplot(aes(x = over_confidence,\n             fill = factor(score_pf))) +\n  geom_density(alpha = .25) + \n  labs(fill = \"Pass/ Fail\") +\n  facet_grid(q_yes ~ .)\n\n\n\n\n\n\n\nCode\ndf_ML |&gt; \n  mutate(prof_program_TF = ifelse(prof_program_TF==0, \n                        'Not in a Professional Program', \n                        'In a Professional Program')) |&gt; \n  ggplot(aes(x = over_confidence,\n             fill = factor(score_pf))) +\n  geom_density(alpha = .25) +\n    labs(fill = \"Pass/ Fail\") +\n  facet_wrap(prof_program_TF ~.)\n\n\n\n\n\n\n\nCode\ndf_clean |&gt; \n  ggplot(aes(x = over_confidence, y = major)) +\n  geom_boxplot() \n\n\n\n\n\n\n\n2.1.4 Classficiation Tree\n\n\nCode\nlibrary(rpart)\nlibrary(rpart.plot)\n\nrf &lt;- rpart(score_pf ~ .,\n            data = df_ML, method  = \"class\")\n# rf\n# printcp(rf)\nrpart.plot(rf)\n\n\n\n\n\n\n\n2.1.5 Regression Tree\n\n\nCode\nrf_reg &lt;- rpart(score ~ .,\n            data = df_ML2, method  = \"anova\")\n# rf_reg\n# printcp(rf_reg)\nrpart.plot(rf_reg)\n\n\n\n\n\n\n\n2.1.6 Random Forest - Variable Importance\n\n\nCode\nlibrary(ranger)\nlibrary(vip)\nfao_ranger1 &lt;- ranger(score ~ ., \n                        data = df_ML2, \n                        mtry = 13, num.trees = 50,\n                        importance = \"impurity\")\n\nvip1 &lt;- vip(fao_ranger1)\n\ndf1 &lt;- data.frame(\n    var = vip1[[\"data\"]][[\"Variable\"]],\n    imp = vip1[[\"data\"]][[\"Importance\"]]\n  ) %&gt;% \n    arrange(var)\n\n\ndf1 |&gt; \n  ggplot(aes(x = imp, y = reorder(var, imp),\n             fill = reorder(var, imp))) +\n  geom_col(show.legend = F) +\n  scale_x_log10() +\n  labs(x = \"Variable Importance\",\n       y = \"\",\n       title = \"Random Forest Estimation\",\n       subtitle = \"Varialbe Importance\") +\n  scale_fill_manual(values = c(\"#E5F5E0\" ,\n  \"#CCE1CA\" ,\n  \"#B2CEB4\" ,\n  \"#99BA9E\" ,\n  \"#7FA688\" ,\n  \"#669373\" ,\n  \"#4C7F5D\",\n  \"#336B47\",\n  \"#195831\" ,\n  \"#00441B\")) +\n  theme(plot.title = element_text(hjust = .5),\n        plot.subtitle = element_text(hjust = .5))\n\n\n\n\n\n\n\nCode\ndf_clean_ML &lt;- df_clean |&gt; \n  select(-id_respondent, \n         -score, -score_scaled, \n         -self_eval,\n         -county, -year_geneseo,\n         -major_1, -major_2, -minor_1, -minor_2,\n         -prof_program, -graduate_degree,\n         ) |&gt; \n  mutate(dept_major_2 = ifelse(!is.na(dept_major_2), 1, 0),\n         dept_minor_1 = ifelse(!is.na(dept_minor_1), 1, 0),\n         dept_minor_2 = ifelse(!is.na(dept_minor_2), 1, 0)\n         ) |&gt; \n  drop_na()\n\ndf_clean_ML_sum &lt;- skim(df_clean_ML) |&gt; \n  arrange(-n_missing)\n\ndept_fnce &lt;- df_clean_ML |&gt; \n  group_by(fnce_course_geneseo, major) |&gt; \n  count() |&gt; \n  arrange(fnce_course_geneseo, n)\n\nreg &lt;- lm(data = df_clean_ML,\n          score_pf ~ .)\ndf_dummies &lt;-  as.data.frame(model.matrix(reg))[, -1]\ndf_dummies &lt;- cbind(df_clean_ML$score_pf ,df_dummies)\ndf_dummies &lt;- df_dummies |&gt; \n  rename(score_pf = `df_clean_ML$score_pf`)\n\ndf_dummies_cor &lt;- cor(df_dummies) |&gt; \n  as.data.frame()"
  },
  {
    "objectID": "project.html#estimation",
    "href": "project.html#estimation",
    "title": "Determinants of Financial Literacy at SUNY Geneseo",
    "section": "3.1 Estimation",
    "text": "3.1 Estimation\n\n\nCode\ndf_clean_ML &lt;- df_clean |&gt; \n  select(-id_respondent, \n         -score, -score_scaled, \n         -self_eval, -self_eval_scaled,\n         -county, -year_geneseo,\n         -major_1, -major_2, -minor_1, -minor_2,\n         -starts_with(\"dept_\"), \n         -q1_inflation, -q2_mortgage_int, -q3_401k,\n         -q4_risk_return, -q5_comp_int, -q6_apr,\n         -prof_program, -graduate_degree,\n         ) |&gt; \n  drop_na()\n\ndf_clean_ML2 &lt;- df_clean |&gt; \n  select(-id_respondent, \n         -score_pf, -score_scaled, \n         -self_eval, -self_eval_scaled,\n         -county, -year_geneseo,\n         -major_1, -major_2, -minor_1, -minor_2,\n         -starts_with(\"dept_\"), \n         -q1_inflation, -q2_mortgage_int, -q3_401k,\n         -q4_risk_return, -q5_comp_int, -q6_apr,\n         -prof_program, -graduate_degree,\n         ) |&gt; \n  drop_na()\n\ndf_clean_ML_sum &lt;- skim(df_clean_ML) |&gt; \n  arrange(-n_missing)\n\ndept_fnce &lt;- df_clean_ML |&gt; \n  group_by(fnce_course_geneseo, major) |&gt; \n  count() |&gt; \n  arrange(fnce_course_geneseo, n)\n\nreg &lt;- lm(data = df_clean_ML,\n          score_pf ~ .)\ndf_dummies &lt;-  as.data.frame(model.matrix(reg))[, -1]\ndf_dummies &lt;- cbind(df_clean_ML$score_pf ,df_dummies)\ndf_ML &lt;- df_dummies |&gt; \n  rename(score_pf = `df_clean_ML$score_pf`)\n\n\ndf_dummies_cor &lt;- cor(df_dummies) |&gt; \n  as.data.frame()\n\n\nreg &lt;- lm(data = df_clean_ML2,\n          score ~ .)\ndf_dummies &lt;-  as.data.frame(model.matrix(reg))[, -1]\ndf_dummies &lt;- cbind(df_clean_ML2$score ,df_dummies)\ndf_ML2 &lt;- df_dummies |&gt; \n  rename(score = `df_clean_ML2$score`)\n\n\n\n\nCode\ncolnames(df_ML) &lt;- str_replace_all(colnames(df_ML), \" \", \"_\")\ncolnames(df_ML) &lt;- str_replace_all(colnames(df_ML), \"-\", \"_\")\n\ncolnames(df_ML2) &lt;- str_replace_all(colnames(df_ML2), \" \", \"_\")\ncolnames(df_ML2) &lt;- str_replace_all(colnames(df_ML2), \"-\", \"_\")\n\nmodel &lt;- glm(score_pf ~ ., \n             data = df_ML, \n             family = binomial(link = \"logit\") )\n\n\nmodel_lm &lt;- lm(score ~ ., \n               data = df_ML2)\n\n# summary(model_lm)\n\n\n\n\nCode\nlibrary(margins)\nm &lt;- margins(model)\name_result &lt;- summary(m)\n# ame_result\n\n\n\n3.1.1 Regression Table\n\nCode\nstargazer(model, model_lm, type = 'html',\n          omit = c(\"MSA\", \"grad_\", \"pay_\",\n                   \"college_fund\"))\n\n\n\n\n\n\n\n\n\n\n\nDependent variable:\n\n\n\n\n\n\n\n\n\n\n\n\nscore_pf\n\n\nscore\n\n\n\n\n\n\nlogistic\n\n\nOLS\n\n\n\n\n\n\n(1)\n\n\n(2)\n\n\n\n\n\n\n\n\nover_confidence\n\n\n-2.023***\n\n\n-0.785***\n\n\n\n\n\n\n(0.265)\n\n\n(0.049)\n\n\n\n\n\n\n\n\n\n\n\n\nyear_upper_lowerUnderclassmen\n\n\n0.345\n\n\n0.077\n\n\n\n\n\n\n(0.862)\n\n\n(0.288)\n\n\n\n\n\n\n\n\n\n\n\n\nyear_upper_lowerUpperclassmen\n\n\n0.932\n\n\n0.091\n\n\n\n\n\n\n(0.852)\n\n\n(0.272)\n\n\n\n\n\n\n\n\n\n\n\n\nmajorNon_STEM\n\n\n-0.031\n\n\n0.156\n\n\n\n\n\n\n(0.535)\n\n\n(0.175)\n\n\n\n\n\n\n\n\n\n\n\n\nmajorSchool_of_Business\n\n\n1.380**\n\n\n0.815***\n\n\n\n\n\n\n(0.618)\n\n\n(0.212)\n\n\n\n\n\n\n\n\n\n\n\n\nmajorSTEM\n\n\n0.246\n\n\n0.397**\n\n\n\n\n\n\n(0.547)\n\n\n(0.183)\n\n\n\n\n\n\n\n\n\n\n\n\ntransfer\n\n\n-1.455**\n\n\n-0.369*\n\n\n\n\n\n\n(0.654)\n\n\n(0.202)\n\n\n\n\n\n\n\n\n\n\n\n\nprof_program_TF\n\n\n1.103*\n\n\n0.059\n\n\n\n\n\n\n(0.608)\n\n\n(0.198)\n\n\n\n\n\n\n\n\n\n\n\n\nage_first_job\n\n\n0.418**\n\n\n0.140**\n\n\n\n\n\n\n(0.193)\n\n\n(0.058)\n\n\n\n\n\n\n\n\n\n\n\n\nfile_taxParents\n\n\n0.179\n\n\n0.215\n\n\n\n\n\n\n(0.413)\n\n\n(0.137)\n\n\n\n\n\n\n\n\n\n\n\n\nfile_taxYes\n\n\n1.807***\n\n\n0.803***\n\n\n\n\n\n\n(0.613)\n\n\n(0.180)\n\n\n\n\n\n\n\n\n\n\n\n\nparent_job_TF\n\n\n-1.404\n\n\n0.135\n\n\n\n\n\n\n(1.469)\n\n\n(0.474)\n\n\n\n\n\n\n\n\n\n\n\n\ncredit_cardParents\n\n\n1.556\n\n\n0.152\n\n\n\n\n\n\n(0.991)\n\n\n(0.306)\n\n\n\n\n\n\n\n\n\n\n\n\ncredit_cardYes\n\n\n2.179***\n\n\n0.494**\n\n\n\n\n\n\n(0.744)\n\n\n(0.215)\n\n\n\n\n\n\n\n\n\n\n\n\nage_18_card\n\n\n-1.327*\n\n\n-0.246\n\n\n\n\n\n\n(0.740)\n\n\n(0.208)\n\n\n\n\n\n\n\n\n\n\n\n\nown_house\n\n\n-4.836***\n\n\n-1.408**\n\n\n\n\n\n\n(1.706)\n\n\n(0.550)\n\n\n\n\n\n\n\n\n\n\n\n\ncar_payment\n\n\n0.589\n\n\n0.328**\n\n\n\n\n\n\n(0.449)\n\n\n(0.146)\n\n\n\n\n\n\n\n\n\n\n\n\nq_IRA\n\n\n0.596\n\n\n0.081\n\n\n\n\n\n\n(0.635)\n\n\n(0.195)\n\n\n\n\n\n\n\n\n\n\n\n\nq_stock\n\n\n0.668\n\n\n0.103\n\n\n\n\n\n\n(0.692)\n\n\n(0.217)\n\n\n\n\n\n\n\n\n\n\n\n\nq_CDs\n\n\n1.206\n\n\n0.141\n\n\n\n\n\n\n(0.822)\n\n\n(0.250)\n\n\n\n\n\n\n\n\n\n\n\n\nq_brockerage\n\n\n0.804\n\n\n0.252\n\n\n\n\n\n\n(0.783)\n\n\n(0.235)\n\n\n\n\n\n\n\n\n\n\n\n\nq_bonds\n\n\n0.290\n\n\n0.022\n\n\n\n\n\n\n(0.764)\n\n\n(0.251)\n\n\n\n\n\n\n\n\n\n\n\n\nq_options\n\n\n1.962\n\n\n0.427\n\n\n\n\n\n\n(1.546)\n\n\n(0.387)\n\n\n\n\n\n\n\n\n\n\n\n\nq_crypto\n\n\n-1.763\n\n\n-0.604*\n\n\n\n\n\n\n(1.185)\n\n\n(0.314)\n\n\n\n\n\n\n\n\n\n\n\n\nq_yes\n\n\n0.013\n\n\n0.431**\n\n\n\n\n\n\n(0.668)\n\n\n(0.213)\n\n\n\n\n\n\n\n\n\n\n\n\nfnce_course_b4\n\n\n0.553\n\n\n0.183\n\n\n\n\n\n\n(0.396)\n\n\n(0.122)\n\n\n\n\n\n\n\n\n\n\n\n\nfnce_course_geneseo1\n\n\n0.764\n\n\n0.114\n\n\n\n\n\n\n(0.702)\n\n\n(0.220)\n\n\n\n\n\n\n\n\n\n\n\n\nfnce_course_geneseoMore_than_1\n\n\n1.867**\n\n\n0.639***\n\n\n\n\n\n\n(0.782)\n\n\n(0.221)\n\n\n\n\n\n\n\n\n\n\n\n\ngoldNo\n\n\n-1.080\n\n\n-0.453*\n\n\n\n\n\n\n(0.769)\n\n\n(0.239)\n\n\n\n\n\n\n\n\n\n\n\n\ngoldYes\n\n\n-0.190\n\n\n0.068\n\n\n\n\n\n\n(0.399)\n\n\n(0.128)\n\n\n\n\n\n\n\n\n\n\n\n\nConstant\n\n\n-7.610**\n\n\n0.721\n\n\n\n\n\n\n(3.583)\n\n\n(1.104)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n355\n\n\n355\n\n\n\n\nR2\n\n\n\n\n0.638\n\n\n\n\nAdjusted R2\n\n\n\n\n0.574\n\n\n\n\nLog Likelihood\n\n\n-129.024\n\n\n\n\n\n\nAkaike Inf. Crit.\n\n\n366.048\n\n\n\n\n\n\nResidual Std. Error\n\n\n\n\n0.981 (df = 301)\n\n\n\n\nF Statistic\n\n\n\n\n10.010*** (df = 53; 301)\n\n\n\n\n\n\n\n\nNote:\n\n\np&lt;0.1; p&lt;0.05; p&lt;0.01\n\n\n\n\n\n\n3.1.2 Logit AME\n\n\nCode\nggplot(data = ame_result |&gt; \n         filter( p &lt;= .1)) +\n  geom_point( aes(y = reorder(factor, AME), x = AME) ) +\n  geom_errorbar(aes(y = reorder(factor, AME), \n                    xmin = lower, xmax = upper),\n                width = .5) +\n  geom_vline(xintercept = 0, color = 'red', linetype = 2) +\n  labs(y = \"\",\n       title = \"Logistic Regression Estimation\",\n       subtitle = \"Average Marginal Effect on Financial Literacy Scores\") +\n  scale_x_continuous(breaks = seq(-1,.4,.2),\n                     labels = scales::percent) +\n  theme(plot.title = element_text(hjust = .5),\n        plot.subtitle = element_text(hjust = .5))\n\n\n\n\n\n\n\n3.1.3 Linear Regression AME\n\n\nCode\nbroom::tidy(model_lm, conf.int = T) |&gt; \n  filter(p.value &lt;= .1) |&gt; \n  filter(!str_detect(term, \"MSA\")) |&gt; \n  ggplot() +\n  geom_point( aes(y = reorder(term, estimate), x = estimate)) +\n  geom_errorbar(aes(y = reorder(term, estimate), \n                    xmin = conf.low, xmax = conf.high),\n                width = .5,) +\n  geom_vline(xintercept = 0, color = 'red', linetype = 2) +\n  labs(y = \"\",\n       x = \"Beta Estimate\",\n       title = \"Linear Regression Estimation\",\n       subtitle = \"Effect on Financial Literacy Scores\")  +\n  theme(plot.title = element_text(hjust = .5),\n        plot.subtitle = element_text(hjust = .5),\n        )\n\n\n\n\n\n\n\nCode\n# df_clean |&gt; \n  # count(credit_card)\n\n\n\n\nCode\ndf_ML |&gt; \n  mutate(q_yes = ifelse(q_yes==0, 'Invests', \"Doesn't Invest\")) |&gt; \n  ggplot(aes(x = over_confidence,\n             fill = factor(score_pf))) +\n  geom_density(alpha = .25) + \n  labs(fill = \"Pass/ Fail\") +\n  facet_grid(q_yes ~ .)\n\n\n\n\n\n\n\nCode\ndf_ML |&gt; \n  mutate(prof_program_TF = ifelse(prof_program_TF==0, \n                        'Not in a Professional Program', \n                        'In a Professional Program')) |&gt; \n  ggplot(aes(x = over_confidence,\n             fill = factor(score_pf))) +\n  geom_density(alpha = .25) +\n    labs(fill = \"Pass/ Fail\") +\n  facet_wrap(prof_program_TF ~.)\n\n\n\n\n\n\n\nCode\ndf_clean |&gt; \n  ggplot(aes(x = over_confidence, y = major)) +\n  geom_boxplot() \n\n\n\n\n\n\n\n3.1.4 Classficiation Tree\n\n\nCode\nlibrary(rpart)\nlibrary(rpart.plot)\n\nrf &lt;- rpart(score_pf ~ .,\n            data = df_ML, method  = \"class\")\n# rf\n# printcp(rf)\nrpart.plot(rf)\n\n\n\n\n\n\n\n3.1.5 Regression Tree\n\n\nCode\nrf_reg &lt;- rpart(score ~ .,\n            data = df_ML2, method  = \"anova\")\n# rf_reg\n# printcp(rf_reg)\nrpart.plot(rf_reg)\n\n\n\n\n\n\n\n3.1.6 Random Forest - Variable Importance\n\n\nCode\nlibrary(ranger)\nlibrary(vip)\nfao_ranger1 &lt;- ranger(score ~ ., \n                        data = df_ML2, \n                        mtry = 13, num.trees = 50,\n                        importance = \"impurity\")\n\nvip1 &lt;- vip(fao_ranger1)\n\ndf1 &lt;- data.frame(\n    var = vip1[[\"data\"]][[\"Variable\"]],\n    imp = vip1[[\"data\"]][[\"Importance\"]]\n  ) %&gt;% \n    arrange(var)\n\n\ndf1 |&gt; \n  ggplot(aes(x = imp, y = reorder(var, imp),\n             fill = reorder(var, imp))) +\n  geom_col(show.legend = F) +\n  scale_x_log10() +\n  labs(x = \"Variable Importance\",\n       y = \"\",\n       title = \"Random Forest Estimation\",\n       subtitle = \"Varialbe Importance\") +\n  scale_fill_manual(values = c(\"#E5F5E0\" ,\n  \"#CCE1CA\" ,\n  \"#B2CEB4\" ,\n  \"#99BA9E\" ,\n  \"#7FA688\" ,\n  \"#669373\" ,\n  \"#4C7F5D\",\n  \"#336B47\",\n  \"#195831\" ,\n  \"#00441B\")) +\n  theme(plot.title = element_text(hjust = .5),\n        plot.subtitle = element_text(hjust = .5))\n\n\n\n\n\n\n\nCode\ndf_clean_ML &lt;- df_clean |&gt; \n  select(-id_respondent, \n         -score, -score_scaled, \n         -self_eval,\n         -county, -year_geneseo,\n         -major_1, -major_2, -minor_1, -minor_2,\n         -prof_program, -graduate_degree,\n         ) |&gt; \n  mutate(dept_major_2 = ifelse(!is.na(dept_major_2), 1, 0),\n         dept_minor_1 = ifelse(!is.na(dept_minor_1), 1, 0),\n         dept_minor_2 = ifelse(!is.na(dept_minor_2), 1, 0)\n         ) |&gt; \n  drop_na()\n\ndf_clean_ML_sum &lt;- skim(df_clean_ML) |&gt; \n  arrange(-n_missing)\n\ndept_fnce &lt;- df_clean_ML |&gt; \n  group_by(fnce_course_geneseo, major) |&gt; \n  count() |&gt; \n  arrange(fnce_course_geneseo, n)\n\nreg &lt;- lm(data = df_clean_ML,\n          score_pf ~ .)\ndf_dummies &lt;-  as.data.frame(model.matrix(reg))[, -1]\ndf_dummies &lt;- cbind(df_clean_ML$score_pf ,df_dummies)\ndf_dummies &lt;- df_dummies |&gt; \n  rename(score_pf = `df_clean_ML$score_pf`)\n\ndf_dummies_cor &lt;- cor(df_dummies) |&gt; \n  as.data.frame()"
  },
  {
    "objectID": "posts/starwars/starwars_df.html",
    "href": "posts/starwars/starwars_df.html",
    "title": "Starwars",
    "section": "",
    "text": "Let’s analyze the starwars data:\nCode\nstarwars &lt;- read_csv(\"https://bcdanl.github.io/data/starwars.csv\")"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "href": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#human-vs.-droid",
    "href": "posts/starwars/starwars_df.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs. Droid",
    "text": "Human vs. Droid\n\n\nCode\nggplot(data = \n         starwars %&gt;% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "posts/ggplot/ggplot-basic.html",
    "href": "posts/ggplot/ggplot-basic.html",
    "title": "Flowers",
    "section": "",
    "text": "Code\nncdc_temp &lt;- read_csv('https://bcdanl.github.io/data/ncdc_temp_cleaned.csv')\n\n\n\n\nCode\ndate_selected &lt;- as.Date(c(\"0000-01-01\", \"0000-04-01\",\n                                            \"0000-07-01\",\n                                            \"0000-10-01\",\n                                            \"0000-12-31\"\n                                            ))\ndf &lt;- filter(ncdc_temp, date %in% date_selected)\np &lt;- ggplot(data = ncdc_temp,\n            mapping = \n              aes( x = date,\n                   y = temperature ) )\n\np + geom_line( aes( color = location ),show.legend = F) +\n  geom_point(data = df) +\n  labs(x = \"month\") +\n  scale_x_date(breaks = date_selected,\n               date_labels = \"%b\")\n\n\n\n\n\n\n\nCode\np_1 &lt;- ggplot(data = ncdc_temp,\n            mapping = \n              aes(x = temperature, \n                  y = month))\np_1 + geom_boxplot(\n  fill = \"grey\"\n) + \n  labs(x = NULL) + \n  coord_flip()\n\n\n\n\n\n\n\nCode\nlibrary(ggridges)\n\np &lt;- ggplot(data = ncdc_temp,\n            mapping = \n              aes(x = temperature, \n                  y = month))\np + geom_density_ridges(alpha = 0.3, fill = \"blue\")\n\n\n\n\n\n\n\nCode\ncars &lt;- mtcars\n\nc&lt;- ggplot(cars, aes(disp, mpg)) +\n        geom_point(aes(color = hp))\nc + labs(x= \"displacement\")+ labs(y= \"fuel efficiency\")\n\n\n\n\n\n\n\nCode\npopgrowth_df &lt;- read_csv(\n  'https://bcdanl.github.io/data/popgrowth.csv')\n\npopgrowth_df %&gt;% arrange(popgrowth, state)\n\n\n# A tibble: 51 × 7\n   region    division           state          pop2000  pop2010 popgrowth   area\n   &lt;chr&gt;     &lt;chr&gt;              &lt;chr&gt;            &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;\n 1 Midwest   East North Central Michigan       9938444  9883640  -0.00551 56539.\n 2 Northeast New England        Rhode Island   1048319  1052567   0.00405  1034.\n 3 South     West South Central Louisiana      4468976  4533372   0.0144  43204.\n 4 Midwest   East North Central Ohio          11353140 11536504   0.0162  40861.\n 5 Northeast Middle Atlantic    New York      18976457 19378102   0.0212  47126.\n 6 South     South Atlantic     West Virginia  1808344  1852994   0.0247  24038.\n 7 Northeast New England        Vermont         608827   625741   0.0278   9217.\n 8 Northeast New England        Massachusetts  6349097  6547629   0.0313   7800.\n 9 Midwest   East North Central Illinois      12419293 12830632   0.0331  55519.\n10 Northeast Middle Atlantic    Pennsylvania  12281054 12702379   0.0343  44743.\n# ℹ 41 more rows\n\n\nCode\npg&lt;- ggplot(popgrowth_df, aes(state, popgrowth, fill = region)) +\n        geom_bar(stat = \"identity\", position = \"dodge\") +\n        coord_flip()\n\npg + labs(y= \"population growth 2000 to 2010\")+ labs(x= \"reorder state, pop growth\")"
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Insightful Analytics",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nFlowers\n\n\n\n\n\n\n\n\n\nFeb 21, 2024\n\n\nAlexis Kruzicki\n\n\n4 min\n\n\n\n\n\n\n  \n\n\n\n\nStarwars\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nYour Name\n\n\n3 min\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nYOUR NAME\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nYOUR NAME\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ALEXIS KRUZICKI",
    "section": "",
    "text": "Alexis Kruzicki majors in Accounting at SUNY Geneseo with monors in Finance and Data Analytics. When not working on data analytics, Finley enjoys spending time unicycling and playing with her pet iguana."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "ALEXIS KRUZICKI",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo | Geneseo, NY  B.S. in Accounting | Aug 2020 - May 2024  Minors in Data Analytics and Finance"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "ALEXIS KRUZICKI",
    "section": "Experience",
    "text": "Experience\nTechnical Accounting Consulting Intern| RSM | June 2023 - Aug 2023  Pathways Audit Intern | Department of Defense, DCAA | December 2021 - April 2023"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code with no space in the folder name.\n\n\nCode\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "project.html#significance-of-the-study",
    "href": "project.html#significance-of-the-study",
    "title": "Determinants of Financial Literacy at SUNY Geneseo",
    "section": "3.1 Significance of the Study",
    "text": "3.1 Significance of the Study"
  }
]